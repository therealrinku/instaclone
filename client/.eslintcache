[{"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\index.js":"1","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\store.js":"2","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\rootReducer.js":"3","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\App.js":"4","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Homepage.js":"5","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Feed.js":"6","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Post.js":"7","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\server_url.js":"8","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\Icons\\CustomIcons.js":"9","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\user\\userReducer.js":"10","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\user\\userActionTypes.js":"11","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Navbar.js":"12","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Backdrop.js":"13","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\utilities\\overflowToggler.js":"14","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\PostOptModal.js":"15","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\PostButton.js":"16","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\AddPostModal.js":"17","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\firebase\\storage.js":"18","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\firebase\\config.js":"19","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\MobileNavbar.js":"20","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Profilepage.js":"21","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\ProfileSummary.js":"22","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\profile\\profileReducer.js":"23","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\profile\\profileActionTypes.js":"24","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\profile\\ProfileActions.js":"25","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\profileServices.js":"26","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\ProfileOptModal.js":"27","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\UnfollowPrompt.js":"28","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\ProfileButtonLine.js":"29","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\PostsGrid.js":"30","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\UserListModal.js":"31","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Loader.js":"32","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\PostView.js":"33","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\ExplorePage.js":"34","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\SearchView.js":"35","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\userServices.js":"36","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Loginpage.js":"37","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Signuppage.js":"38","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Landingpage.js":"39","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\user\\userActions.js":"40","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\authServices.js":"41","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Recommended.js":"42","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\post\\postsActions.js":"43","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\post\\postsActionTypes.js":"44","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\post\\postsReducer.js":"45","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\CommentBox.js":"46","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\postsServices.js":"47","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\commentServices.js":"48","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\CommentsView.js":"49"},{"size":358,"mtime":1609429642135,"results":"50","hashOfConfig":"51"},{"size":420,"mtime":1609430309686,"results":"52","hashOfConfig":"51"},{"size":345,"mtime":1610634271550,"results":"53","hashOfConfig":"51"},{"size":2140,"mtime":1610636201268,"results":"54","hashOfConfig":"51"},{"size":3491,"mtime":1610635742801,"results":"55","hashOfConfig":"51"},{"size":992,"mtime":1610706507397,"results":"56","hashOfConfig":"51"},{"size":5483,"mtime":1610706469624,"results":"57","hashOfConfig":"51"},{"size":70,"mtime":1609424856684,"results":"58","hashOfConfig":"51"},{"size":9885,"mtime":1610369679816,"results":"59","hashOfConfig":"51"},{"size":1895,"mtime":1610611997462,"results":"60","hashOfConfig":"51"},{"size":379,"mtime":1610611820140,"results":"61","hashOfConfig":"51"},{"size":1921,"mtime":1610370071268,"results":"62","hashOfConfig":"51"},{"size":393,"mtime":1610178845181,"results":"63","hashOfConfig":"51"},{"size":231,"mtime":1609483675715,"results":"64","hashOfConfig":"51"},{"size":1538,"mtime":1610192241753,"results":"65","hashOfConfig":"51"},{"size":698,"mtime":1609934196613,"results":"66","hashOfConfig":"51"},{"size":894,"mtime":1609512677118,"results":"67","hashOfConfig":"51"},{"size":197,"mtime":1609513014714,"results":"68","hashOfConfig":"51"},{"size":348,"mtime":1610018164630,"results":"69","hashOfConfig":"51"},{"size":1030,"mtime":1609562270103,"results":"70","hashOfConfig":"51"},{"size":7354,"mtime":1610597659360,"results":"71","hashOfConfig":"51"},{"size":4233,"mtime":1609982625085,"results":"72","hashOfConfig":"51"},{"size":2896,"mtime":1609983291167,"results":"73","hashOfConfig":"51"},{"size":450,"mtime":1609982931973,"results":"74","hashOfConfig":"51"},{"size":2914,"mtime":1610024740403,"results":"75","hashOfConfig":"51"},{"size":2330,"mtime":1610593883262,"results":"76","hashOfConfig":"51"},{"size":910,"mtime":1610597537483,"results":"77","hashOfConfig":"51"},{"size":555,"mtime":1609945241507,"results":"78","hashOfConfig":"51"},{"size":918,"mtime":1609933954538,"results":"79","hashOfConfig":"51"},{"size":655,"mtime":1610183250850,"results":"80","hashOfConfig":"51"},{"size":1068,"mtime":1609979156766,"results":"81","hashOfConfig":"51"},{"size":96,"mtime":1610291340236,"results":"82","hashOfConfig":"51"},{"size":7902,"mtime":1610712071487,"results":"83","hashOfConfig":"51"},{"size":1090,"mtime":1610633921895,"results":"84","hashOfConfig":"51"},{"size":1466,"mtime":1610360621307,"results":"85","hashOfConfig":"51"},{"size":682,"mtime":1610610143614,"results":"86","hashOfConfig":"51"},{"size":2087,"mtime":1610540050201,"results":"87","hashOfConfig":"51"},{"size":2891,"mtime":1610539848328,"results":"88","hashOfConfig":"51"},{"size":160,"mtime":1610460695754,"results":"89","hashOfConfig":"51"},{"size":2488,"mtime":1610635597051,"results":"90","hashOfConfig":"51"},{"size":985,"mtime":1610595731576,"results":"91","hashOfConfig":"51"},{"size":1769,"mtime":1610612902993,"results":"92","hashOfConfig":"51"},{"size":5803,"mtime":1610711384319,"results":"93","hashOfConfig":"51"},{"size":718,"mtime":1610709945865,"results":"94","hashOfConfig":"51"},{"size":4788,"mtime":1610711414297,"results":"95","hashOfConfig":"51"},{"size":1604,"mtime":1610706809853,"results":"96","hashOfConfig":"51"},{"size":3587,"mtime":1610703891674,"results":"97","hashOfConfig":"51"},{"size":742,"mtime":1610709825540,"results":"98","hashOfConfig":"51"},{"size":683,"mtime":1610712227357,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"6xydaq",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"102"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"102"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"102"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"102"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"102"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"102"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"102"},"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\index.js",[],["211","212"],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\store.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\rootReducer.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\App.js",["213"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport ExplorePage from \"../pages/ExplorePage\";\r\nimport Homepage from \"../pages/Homepage\";\r\nimport PostView from \"../pages/PostView\";\r\nimport Profilepage from \"../pages/Profilepage\";\r\nimport Landingpage from \"../pages/Landingpage\";\r\nimport Loginpage from \"../pages/Loginpage\";\r\nimport Signuppage from \"../pages/Signuppage\";\r\nimport * as userActions from \"../redux/user/userActions\";\r\nimport { SiInstagram } from \"react-icons/all\";\r\n\r\nconst App = ({ loading, currentUsername, LOGIN_WITH_UID }) => {\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      LOGIN_WITH_UID(token);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      {loading ? (\r\n        <div\r\n          style={{\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            fontSize: \"45px\",\r\n            color: \"rgba(0,0,0,0.5)\",\r\n          }}\r\n        >\r\n          <SiInstagram />\r\n        </div>\r\n      ) : (\r\n        <Switch>\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            component={currentUsername ? Homepage : Landingpage}\r\n          />\r\n          <Route path=\"/login\" exact component={Loginpage} />\r\n          <Route path=\"/signup\" exact component={Signuppage} />\r\n          <Route path=\"/explore\" exact component={ExplorePage} />\r\n          <Route path=\"/:username\" exact component={Profilepage} />\r\n          <Route path=\"/p/:post_id\" exact component={PostView} />\r\n        </Switch>\r\n      )}\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.user.loading,\r\n    currentUsername: state.user.currentUserData.username,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    LOGIN_WITH_UID: (uid) => dispatch(userActions.LOGIN_WITH_UID(uid)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Homepage.js",["214"],"import Feed from \"../components/Feed\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport PostButton from \"../components/PostButton\";\r\nimport overflowToggler from \"../utilities/overflowToggler\";\r\nimport AddPostModal from \"../components/AddPostModal\";\r\nimport Backdrop from \"../components/Backdrop\";\r\nimport MobileNavbar from \"../components/MobileNavbar\";\r\nimport Loader from \"../components/Loader\";\r\nimport * as postsActions from \"../redux/post/postsActions\";\r\nimport * as userActions from \"../redux/user/userActions\";\r\nimport Recommended from \"../components/Recommended\";\r\n\r\nconst Homepage = ({\r\n  currentUsername,\r\n  currentUserProfileImage,\r\n  currentUserUid,\r\n  feed,\r\n  GET_FEED,\r\n  UPLOAD_POST,\r\n  loading,\r\n  recommendedUsers,\r\n  GET_RECOMMENDED_USERS,\r\n  feedLoaded,\r\n}) => {\r\n  const [selectedImage, setSelectedImage] = useState(\"\");\r\n  const [showAddPostModal, setShowAddPostModal] = useState(false);\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  const uploadPost = () => {\r\n    if (selectedImage) {\r\n      toggleAddPostModal();\r\n      UPLOAD_POST({\r\n        owner_uid: currentUserUid,\r\n        status: status,\r\n        currentUsername: currentUsername,\r\n        image: selectedImage,\r\n        posted_date: new Date(),\r\n        currentUserProfileImage: currentUserProfileImage,\r\n      });\r\n    }\r\n  };\r\n\r\n  const toggleAddPostModal = () => {\r\n    setShowAddPostModal((prev) => !prev);\r\n    overflowToggler();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!feedLoaded) {\r\n      GET_FEED(currentUserUid);\r\n    }\r\n    if (feedLoaded && feed.length < 1) {\r\n      console.log(\"s\");\r\n      GET_RECOMMENDED_USERS(currentUserUid);\r\n    }\r\n  }, [currentUserUid, feedLoaded]);\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      {loading ? <Loader /> : null}\r\n      {showAddPostModal ? (\r\n        <Fragment>\r\n          <Backdrop show={showAddPostModal} toggle={toggleAddPostModal} />\r\n          <AddPostModal\r\n            uploadPost={uploadPost}\r\n            toggle={toggleAddPostModal}\r\n            selectedImage={selectedImage}\r\n            currentUserProfileImage={currentUserProfileImage}\r\n            status={status}\r\n            setStatus={setStatus}\r\n          />\r\n        </Fragment>\r\n      ) : null}\r\n      <PostButton\r\n        setSelectedImage={setSelectedImage}\r\n        toggleAddPostModal={toggleAddPostModal}\r\n      />\r\n      <Navbar />\r\n      {feed.length > 0 && !loading ? (\r\n        <Feed feed={feed} />\r\n      ) : !loading ? (\r\n        <Recommended recommendedUsers={recommendedUsers} />\r\n      ) : null}\r\n      <MobileNavbar />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    feedLoaded: state.posts.feed_loaded,\r\n    recommendedUsers: state.user.recommendedUsers,\r\n    loading: state.posts.loading_feed,\r\n    feed: state.posts.posts.filter((post) => post.infeed === true),\r\n    currentUsername: state.user.currentUserData.username,\r\n    currentUserUid: state.user.currentUserData.uid,\r\n    currentUserProfileImage: state.user.currentUserData.profile_image_url,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    GET_RECOMMENDED_USERS: (uid) => dispatch(userActions.GET_RECOMMENDED(uid)),\r\n    UPLOAD_POST: (post_data) => dispatch(postsActions.UPLOAD_POST(post_data)),\r\n    GET_FEED: (user_uid) => dispatch(postsActions.GET_FEED(user_uid)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage);\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Feed.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Post.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\server_url.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\Icons\\CustomIcons.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\user\\userReducer.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\user\\userActionTypes.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Navbar.js",["215","216"],"import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Icons from \"../Icons/CustomIcons\";\r\nimport SearchView from \"./SearchView\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Navbar = ({ currentUsername, currentUserProfileimage }) => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const history = useHistory();\r\n  const pathname = history.location.pathname;\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <ul>\r\n        <Link to=\"/\">Instaclone</Link>\r\n      </ul>\r\n\r\n      <ul>\r\n        <SearchView />\r\n      </ul>\r\n\r\n      <ul className=\"right\">\r\n        <Link to=\"/\">\r\n          {pathname === \"/\" ? <Icons.HomeActiveIcon /> : <Icons.HomeIcon />}\r\n        </Link>\r\n\r\n        <Link to=\"/chat\">\r\n          <Icons.ChatIcon />\r\n        </Link>\r\n\r\n        <Link to=\"/explore\">\r\n          {pathname === \"/explore\" ? (\r\n            <Icons.ExploreActiveIcon />\r\n          ) : (\r\n            <Icons.ExploreIcon />\r\n          )}\r\n        </Link>\r\n\r\n        <Link to=\"/activity\">\r\n          <Icons.ActivityIcon />\r\n        </Link>\r\n\r\n        <Link to={`/${currentUsername}`}>\r\n          <img\r\n            style={\r\n              pathname === `/${currentUsername}`\r\n                ? {\r\n                    border: \"solid 1px black\",\r\n                    padding: \"2px\",\r\n                    width: \"20px\",\r\n                    height: \"20px\",\r\n                  }\r\n                : null\r\n            }\r\n            src={currentUserProfileimage || \"https://bit.ly/3pc96tw\"}\r\n            alt=\"profile_image\"\r\n          />\r\n        </Link>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUsername: state.user.currentUserData.username,\r\n    currentUserProfileimage: state.user.currentUserData.profile_image_url,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Backdrop.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\utilities\\overflowToggler.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\PostOptModal.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\PostButton.js",["217"],"import React, { useState } from \"react\";\r\nimport { IoAdd } from \"react-icons/all\";\r\n\r\nconst NewPostBtn = ({ setSelectedImage, toggleAddPostModal }) => {\r\n  const updateFile = (e) => {\r\n    if (e.target.files[0]) {\r\n      toggleAddPostModal();\r\n      setSelectedImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"post--button\">\r\n      <button>\r\n        <form>\r\n          <input\r\n            type=\"file\"\r\n            id=\"file_input\"\r\n            onChange={updateFile}\r\n            name=\"post\"\r\n          />\r\n          <label htmlFor=\"file_input\">\r\n            <IoAdd />\r\n          </label>\r\n        </form>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPostBtn;\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\AddPostModal.js",["218"],"import React, { useMemo, useState } from \"react\";\r\n\r\nconst AddPostModal = ({\r\n  uploadPost,\r\n  toggle,\r\n  selectedImage,\r\n  currentUserProfileImage,\r\n  status,\r\n  setStatus,\r\n}) => {\r\n  const selectedImageFile = useMemo(() => {\r\n    return selectedImage ? URL.createObjectURL(selectedImage) : null;\r\n  }, [selectedImage]);\r\n\r\n  return (\r\n    <div className=\"add--post-modal\">\r\n      <div>\r\n        <img src={currentUserProfileImage} alt=\"my_profile_image\" />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your status here\"\r\n          value={status}\r\n          onChange={(e) => setStatus(e.target.value)}\r\n        />\r\n        <img src={selectedImageFile} alt=\"post_img\" />\r\n      </div>\r\n\r\n      <div>\r\n        <button onClick={uploadPost}>Post</button>\r\n        <button onClick={toggle}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPostModal;\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\firebase\\storage.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\firebase\\config.js",[],["219","220"],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\MobileNavbar.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Profilepage.js",["221","222"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport ProfileSummary from \"../components/ProfileSummary\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport MobileNavbar from \"../components/MobileNavbar\";\r\nimport * as profileActions from \"../redux/profile/ProfileActions\";\r\nimport { connect } from \"react-redux\";\r\nimport overflowToggler from \"../utilities/overflowToggler\";\r\nimport ProfileOptModal from \"../components/ProfileOptModal\";\r\nimport Backdrop from \"../components/Backdrop\";\r\nimport UnfollowPrompt from \"../components/UnfollowPrompt\";\r\nimport ProfileButtonLine from \"../components/ProfileButtonLine\";\r\nimport PostsGrid from \"../components/PostsGrid\";\r\nimport UserListModal from \"../components/UserListModal\";\r\nimport Loader from \"../components/Loader\";\r\nimport * as userActions from \"../redux/user/userActions\";\r\n\r\nconst Profilepage = ({\r\n  history,\r\n  currentUserUid,\r\n  profiles,\r\n  GET_PROFILE_DATA,\r\n  currentUsername,\r\n  FOLLOW,\r\n  UNFOLLOW,\r\n  FETCH_FOLLOWERS,\r\n  FETCH_FOLLOWINGS,\r\n  loading,\r\n  loading_followers_or_following,\r\n  LOGOUT,\r\n}) => {\r\n  const profileUsername = history.location.pathname.slice(1);\r\n  const profileData = profiles.filter(\r\n    (profile) => profile?.username === profileUsername\r\n  );\r\n\r\n  //modal handlers\r\n  const [showProfileOptionsModal, setShowProfileOptionsModal] = useState(false);\r\n  const [showUnfollowPrompt, setShowUnfollowPrompt] = useState(false);\r\n  const [showFollowers, setShowFollowers] = useState(false);\r\n  const [showFollowings, setShowFollowings] = useState(false);\r\n\r\n  //\r\n  const [showSavedPosts, setShowSavedPosts] = useState(false);\r\n\r\n  //followers and following list\r\n  const followersList = profiles.filter(\r\n    (profile) => profile.username === profileUsername\r\n  )[0]?.followers;\r\n  const followingList = profiles.filter(\r\n    (profile) => profile.username === profileUsername\r\n  )[0]?.followings;\r\n\r\n  const LOAD_FOLLOWERS = () => {\r\n    if (!followersList) {\r\n      FETCH_FOLLOWERS(profileUsername);\r\n    }\r\n    toggleModal(setShowFollowers);\r\n  };\r\n\r\n  const LOAD_FOLLOWINGS = () => {\r\n    if (!followingList) {\r\n      FETCH_FOLLOWINGS(profileUsername);\r\n    }\r\n    toggleModal(setShowFollowings);\r\n  };\r\n\r\n  const toggleModal = (setModal) => {\r\n    setModal((prev) => !prev);\r\n    overflowToggler();\r\n  };\r\n\r\n  const Logout = () => {\r\n    toggleModal(setShowProfileOptionsModal);\r\n    LOGOUT();\r\n    history.push(\"/\");\r\n    localStorage.removeItem(\"token\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    //set document title\r\n    document.title = `${profileUsername}-Instaclone`;\r\n    if (profileData.length <= 0) {\r\n      GET_PROFILE_DATA(profileUsername, currentUserUid);\r\n    }\r\n\r\n    return () => {\r\n      document.title = \"Instaclone\";\r\n    };\r\n  }, [profileUsername, currentUserUid]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      {loading ? (\r\n        <Loader />\r\n      ) : !loading && profileData.length < 1 ? (\r\n        <p\r\n          style={{ marginTop: \"100px\", textAlign: \"center\", fontSize: \"15px\" }}\r\n        >\r\n          This link is broken\r\n        </p>\r\n      ) : (\r\n        <div className=\"profile--page\">\r\n          <ProfileSummary\r\n            profileData={profileData[0] || []}\r\n            toggleProfileOptions={() => toggleModal(setShowProfileOptionsModal)}\r\n            toggleUnfollowPrompt={() => toggleModal(setShowUnfollowPrompt)}\r\n            isMyProfile={currentUsername === profileUsername}\r\n            FOLLOW={() => FOLLOW(profileData[0]?.uid, currentUserUid)}\r\n            LOAD_FOLLOWERS={LOAD_FOLLOWERS}\r\n            LOAD_FOLLOWINGS={LOAD_FOLLOWINGS}\r\n          />\r\n          <ProfileButtonLine\r\n            showSavedPosts={showSavedPosts}\r\n            isMyProfile={currentUsername === profileUsername}\r\n            viewSavedPosts={() => setShowSavedPosts(true)}\r\n            hideSavedPosts={() => setShowSavedPosts(false)}\r\n            no_posts={profileData[0]?.posts.length <= 0}\r\n          />\r\n          <PostsGrid\r\n            userPosts={\r\n              showSavedPosts\r\n                ? profileData[0]?.savedPosts\r\n                : profileData[0]?.posts || []\r\n            }\r\n          />\r\n          <MobileNavbar />\r\n          {showProfileOptionsModal ? (\r\n            <Fragment>\r\n              <ProfileOptModal\r\n                toggle={() => toggleModal(setShowProfileOptionsModal)}\r\n                isMyProfile={currentUsername === profileUsername}\r\n                LOGOUT={Logout}\r\n              />\r\n              <Backdrop\r\n                show={showProfileOptionsModal}\r\n                toggle={() => toggleModal(setShowProfileOptionsModal)}\r\n              />\r\n            </Fragment>\r\n          ) : null}\r\n\r\n          {showUnfollowPrompt ? (\r\n            <Fragment>\r\n              <Backdrop\r\n                show={showUnfollowPrompt}\r\n                toggle={() => toggleModal(setShowUnfollowPrompt)}\r\n              />\r\n              <UnfollowPrompt\r\n                profileUsername={profileUsername}\r\n                profileImage={profileData[0]?.profile_image_url}\r\n                toggle={() => toggleModal(setShowUnfollowPrompt)}\r\n                UNFOLLOW={() => UNFOLLOW(profileData[0].uid, currentUserUid)}\r\n              />\r\n            </Fragment>\r\n          ) : null}\r\n\r\n          {showFollowers || showFollowings ? (\r\n            <Fragment>\r\n              <Backdrop\r\n                toggle={() =>\r\n                  showFollowers\r\n                    ? toggleModal(setShowFollowers)\r\n                    : toggleModal(setShowFollowings)\r\n                }\r\n                show={showFollowers || showFollowings}\r\n              />\r\n              <UserListModal\r\n                title={showFollowers ? \"Followers\" : \"Following\"}\r\n                loading={loading_followers_or_following}\r\n                users={(showFollowers ? followersList : followingList) || []}\r\n                toggle={() =>\r\n                  showFollowers\r\n                    ? toggleModal(setShowFollowers)\r\n                    : toggleModal(setShowFollowings)\r\n                }\r\n              />\r\n            </Fragment>\r\n          ) : null}\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.profile.loading,\r\n    currentUsername: state.user.currentUserData.username,\r\n    currentUserUid: state.user.currentUserData.uid,\r\n    profiles: state.profile.profiles,\r\n    loading: state.profile.loading,\r\n    loading_followers_or_following:\r\n      state.profile.loading_followers_or_following,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    LOGOUT: () => dispatch(userActions.LOGOUT()),\r\n    FETCH_FOLLOWERS: (username) =>\r\n      dispatch(profileActions.FETCH_FOLLOWERS(username)),\r\n    FETCH_FOLLOWINGS: (username) =>\r\n      dispatch(profileActions.FETCH_FOLLOWINGS(username)),\r\n    UNFOLLOW: (unfollowing_user_uid, unfollower_user_uid) =>\r\n      dispatch(\r\n        profileActions.UNFOLLOW(unfollowing_user_uid, unfollower_user_uid)\r\n      ),\r\n    FOLLOW: (following_user_uid, follower_user_uid) =>\r\n      dispatch(profileActions.FOLLOW(following_user_uid, follower_user_uid)),\r\n    GET_PROFILE_DATA: (profile_username, current_user_uid) =>\r\n      dispatch(\r\n        profileActions.GET_PROFILE_DATA(profile_username, current_user_uid)\r\n      ),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profilepage);\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\ProfileSummary.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\profile\\profileReducer.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\profile\\profileActionTypes.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\profile\\ProfileActions.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\profileServices.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\ProfileOptModal.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\UnfollowPrompt.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\ProfileButtonLine.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\PostsGrid.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\UserListModal.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Loader.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\PostView.js",["223","224"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { BiDotsHorizontal } from \"react-icons/bi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Icons from \"../Icons/CustomIcons\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport MobileNavbar from \"../components/MobileNavbar\";\r\nimport * as PostsActions from \"../redux/post/postsActions\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport overflowToggler from \"../utilities/overflowToggler\";\r\nimport Backdrop from \"../components/Backdrop\";\r\nimport PostOptModal from \"../components/PostOptModal\";\r\nimport UsersListModal from \"../components/UserListModal\";\r\nimport CommentBox from \"../components/CommentBox\";\r\nimport CommentsView from \"../components/CommentsView\";\r\n\r\nconst PostView = ({\r\n  currentUsername,\r\n  currentUserUid,\r\n  posts,\r\n  match,\r\n  history,\r\n  LOAD_POST,\r\n  loading,\r\n  LIKE_POST,\r\n  UNLIKE_POST,\r\n  SAVE_POST,\r\n  UNSAVE_POST,\r\n  GET_LIKERS,\r\n  loadingLikers,\r\n  DELETE_POST,\r\n  GET_COMMENTS,\r\n}) => {\r\n  //modal\r\n  const [showPostOptionsModal, setShowPostOptionsModal] = useState(false);\r\n  const [showLikersModal, setShowLikersModal] = useState(false);\r\n\r\n  //checking image is loaded\r\n  const [imageIsLoaded, setImageIsLoaded] = useState(false);\r\n\r\n  const toggleModal = (setModal) => {\r\n    setModal((prev) => !prev);\r\n    overflowToggler();\r\n  };\r\n\r\n  const post_id = match.params.post_id;\r\n  const currentPost = posts.filter((post) => post.post_id === post_id);\r\n\r\n  const thisPostLikers = currentPost[0]?.post_likers;\r\n  const thisPostComments = currentPost[0]?.comments;\r\n\r\n  const post_uid = currentPost[0]?.post_uid;\r\n  const haveILiked = currentPost[0]?.liked_by_me;\r\n  const haveISaved = currentPost[0]?.i_have_saved;\r\n\r\n  const likeUnlikePost = () => {\r\n    if (haveILiked) {\r\n      UNLIKE_POST(post_uid, currentUserUid);\r\n    } else {\r\n      LIKE_POST(post_uid, currentUserUid);\r\n    }\r\n  };\r\n\r\n  const saveUnsavePost = () => {\r\n    if (haveISaved) {\r\n      UNSAVE_POST(post_uid, currentUsername);\r\n    } else {\r\n      SAVE_POST(post_uid, currentUsername);\r\n    }\r\n  };\r\n\r\n  const getLikers = () => {\r\n    toggleModal(setShowLikersModal);\r\n    if (!thisPostLikers) {\r\n      GET_LIKERS(post_uid);\r\n    }\r\n  };\r\n\r\n  const getComments = () => {\r\n    if (!thisPostComments) {\r\n      GET_COMMENTS(post_uid, currentUserUid);\r\n    }\r\n  };\r\n\r\n  const deletePost = () => {\r\n    toggleModal(setShowPostOptionsModal);\r\n    DELETE_POST(post_uid);\r\n    history.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getComments();\r\n    if (currentPost.length < 1) {\r\n      LOAD_POST(post_id, currentUserUid);\r\n    }\r\n  }, [currentUserUid, post_id]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {showLikersModal ? (\r\n        <Fragment>\r\n          <UsersListModal\r\n            users={thisPostLikers || []}\r\n            title=\"Likers\"\r\n            toggle={() => toggleModal(setShowLikersModal)}\r\n            loading={loadingLikers}\r\n          />\r\n          <Backdrop\r\n            show={showLikersModal}\r\n            toggle={() => toggleModal(setShowLikersModal)}\r\n          />\r\n        </Fragment>\r\n      ) : null}\r\n\r\n      {showPostOptionsModal ? (\r\n        <Fragment>\r\n          <Backdrop\r\n            show={showPostOptionsModal}\r\n            toggle={() => toggleModal(setShowPostOptionsModal)}\r\n          />\r\n          <PostOptModal\r\n            isMyPost={currentPost[0].poster_username === currentUsername}\r\n            toggle={() => toggleModal(setShowPostOptionsModal)}\r\n            post_id={post_id}\r\n            deletePost={deletePost}\r\n          />\r\n        </Fragment>\r\n      ) : null}\r\n\r\n      <Navbar />\r\n      <MobileNavbar />\r\n      {loading ? (\r\n        <Loader />\r\n      ) : //checking if post exiists\r\n      !loading && !currentPost[0]?.post_image ? (\r\n        <p\r\n          style={{ marginTop: \"100px\", textAlign: \"center\", fontSize: \"15px\" }}\r\n        >\r\n          Post deleted or something went wrong!\r\n        </p>\r\n      ) : (\r\n        <Fragment>\r\n          <div\r\n            className=\"post--view--\"\r\n            style={!imageIsLoaded ? { display: \"none\" } : null}\r\n          >\r\n            <section>\r\n              <img\r\n                onLoad={() => setImageIsLoaded(true)}\r\n                src={currentPost[0]?.post_image}\r\n              />\r\n            </section>\r\n\r\n            <section>\r\n              <div className=\"top--section\">\r\n                <ul>\r\n                  <img\r\n                    src={currentPost[0]?.poster_profileimage}\r\n                    alt=\"post_user_image\"\r\n                  />\r\n                  <Link to={`/${currentPost[0]?.poster_username}`}>\r\n                    {currentPost[0]?.poster_username || \"rinku\"}\r\n                  </Link>\r\n                </ul>\r\n\r\n                <ul>\r\n                  <button onClick={() => toggleModal(setShowPostOptionsModal)}>\r\n                    <BiDotsHorizontal />\r\n                  </button>\r\n                </ul>\r\n              </div>\r\n\r\n              <div className=\"comment--view-section\">\r\n                <CommentsView comments={thisPostComments || []} />\r\n              </div>\r\n\r\n              <div className=\"absolute--bottom\">\r\n                <div className=\"buttons\">\r\n                  <div className=\"buttons--section-one\">\r\n                    <button onClick={likeUnlikePost}>\r\n                      {haveILiked ? <Icons.LovedIcon /> : <Icons.LoveIcon />}\r\n                    </button>\r\n\r\n                    <button>\r\n                      <Icons.CommentIcon />\r\n                    </button>\r\n\r\n                    <button>\r\n                      <Icons.ShareIcon />\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <button onClick={saveUnsavePost}>\r\n                      {haveISaved ? <Icons.SavedIcon /> : <Icons.SaveIcon />}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <button onClick={getLikers}>\r\n                    {currentPost[0]?.post_likes_count || \"No\"} likes\r\n                  </button>\r\n                  <button>\r\n                    {currentPost[0]?.post_comments_count || 0} comments\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"date\">\r\n                  <p>{currentPost[0]?.post_posted_date}</p>\r\n                </div>\r\n\r\n                <CommentBox\r\n                  post_uid={post_uid}\r\n                  post_owner_uid={currentPost[0]?.poster_uid}\r\n                />\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loadingLikers: state.posts.loading_likers,\r\n    currentUsername: state.user.currentUserData.username,\r\n    currentUserUid: state.user.currentUserData.uid,\r\n    posts: state.posts.posts,\r\n    loading: state.posts.loading_post,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    GET_COMMENTS: (post_uid, currentUserUid) =>\r\n      dispatch(PostsActions.GET_COMMENTS(post_uid, currentUserUid)),\r\n    DELETE_POST: (post_uid) => dispatch(PostsActions.DELETE_POST(post_uid)),\r\n    GET_LIKERS: (post_uid) => dispatch(PostsActions.GET_LIKERS(post_uid)),\r\n    SAVE_POST: (post_uid, saver_username) =>\r\n      dispatch(PostsActions.SAVE_POST(post_uid, saver_username)),\r\n    UNSAVE_POST: (post_uid, unsaver_username) =>\r\n      dispatch(PostsActions.UNSAVE_POST(post_uid, unsaver_username)),\r\n    LIKE_POST: (post_uid, liker_uid) =>\r\n      dispatch(PostsActions.LIKE_POST(post_uid, liker_uid)),\r\n    UNLIKE_POST: (post_uid, unliker_uid) =>\r\n      dispatch(PostsActions.UNLIKE_POST(post_uid, unliker_uid)),\r\n    LOAD_POST: (post_id, current_user_uid) =>\r\n      dispatch(PostsActions.GET_POST(post_id, current_user_uid)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostView);\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\ExplorePage.js",["225"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport PostsGrid from \"../components/PostsGrid\";\r\nimport * as PostsActions from \"../redux/post/postsActions\";\r\n\r\nconst ExplorePage = ({ loading, explorePosts, loadExplorePosts }) => {\r\n  useEffect(() => {\r\n    if (explorePosts.length <= 0) {\r\n      loadExplorePosts();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"explore--page\">\r\n          <PostsGrid userPosts={explorePosts} />\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.posts.loading_explore_posts,\r\n    explorePosts: state.posts.explore_posts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loadExplorePosts: () => dispatch(PostsActions.LOAD_EXPLORE_POSTS()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExplorePage);\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\SearchView.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\userServices.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Loginpage.js",["226"],"import React, { useState } from \"react\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport * as userActions from \"../redux/user/userActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Loginpage = ({ noFullPage, error, loading, currentUsername, LOGIN }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    LOGIN(username, password);\r\n  };\r\n\r\n  return (\r\n    <div className={!noFullPage ? `auth--page full--page` : \"auth--page\"}>\r\n      <div>\r\n        <p>Instaclone</p>\r\n        <form onSubmit={login}>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={username}\r\n            placeholder=\"Username\"\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            autoFocus\r\n          />\r\n\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            placeholder=\"Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n\r\n          <button type=\"submit\" disabled={loading}>\r\n            Login\r\n          </button>\r\n\r\n          <p style={{ color: \"red\" }}>{error}</p>\r\n        </form>\r\n      </div>\r\n\r\n      <div>\r\n        <p>Don't have an account yet?</p>\r\n        <NavLink to=\"/signup\">Signup</NavLink>\r\n      </div>\r\n\r\n      <div>\r\n        <FaGithub />\r\n        <a href=\"https://github.com/therealrinku/instaclone\" target=\"_blank\">\r\n          View on Github\r\n        </a>\r\n      </div>\r\n      {currentUsername ? <Redirect to=\"/\" /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    error: state.user.error,\r\n    loading: state.user.loading,\r\n    currentUsername: state.user.currentUserData.username,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    LOGIN: (username, password) =>\r\n      dispatch(userActions.LOGIN(username, password)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Loginpage);\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Signuppage.js",["227"],"import React, { useState } from \"react\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { signupUser } from \"../services/authServices\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Signuppage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n\r\n  const history = useHistory();\r\n\r\n  const SIGNUP = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const trimmed = {\r\n      email: email.trim(),\r\n      username: username.trim(),\r\n      password: password.trim(),\r\n    };\r\n\r\n    if (\r\n      trimmed.email !== \"\" &&\r\n      trimmed.email.length >= 8 &&\r\n      trimmed.email.length <= 40 &&\r\n      trimmed.email.includes(\"@\") &&\r\n      trimmed.email.includes(\".com\")\r\n    ) {\r\n      if (\r\n        trimmed.username.length >= 5 &&\r\n        trimmed.username.length <= 25 &&\r\n        !trimmed.username.includes(\" \")\r\n      ) {\r\n        if (trimmed.password.length >= 8 && trimmed.password.length <= 30) {\r\n          const response = await signupUser(email, username, password);\r\n          if (response !== \"success\") {\r\n            setError(response);\r\n          } else {\r\n            history.push(\"/login\");\r\n          }\r\n        } else {\r\n          setError(\"Password must be between 8 and 30 characters.\");\r\n        }\r\n      } else {\r\n        setError(\"Username must be spaceless between 5 and 25 characters.\");\r\n      }\r\n    } else {\r\n      setError(\"Please enter a valid email address.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth--page\">\r\n      <div>\r\n        <p>Instaclone</p>\r\n        <form onSubmit={SIGNUP}>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            placeholder=\"Email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            autoFocus\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={username}\r\n            placeholder=\"Username\"\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            placeholder=\"Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n\r\n          <button type=\"submit\">Signup</button>\r\n          <p>By signing up, you agree to our terms and policies.</p>\r\n          <p style={{ color: \"red\" }}>{error}</p>\r\n        </form>\r\n      </div>\r\n\r\n      <div>\r\n        <p>Already have an account yet?</p>\r\n        <NavLink to=\"/login\">Login</NavLink>\r\n      </div>\r\n\r\n      <div>\r\n        <FaGithub />\r\n        <a href=\"https://github.com/therealrinku/instaclone\" target=\"_blank\">\r\n          View on Github\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signuppage;\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Landingpage.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\user\\userActions.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\authServices.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Recommended.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\post\\postsActions.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\post\\postsActionTypes.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\post\\postsReducer.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\CommentBox.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\postsServices.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\commentServices.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\CommentsView.js",["228"],"import React from \"react\";\r\n\r\nconst CommentsView = ({ comments }) => {\r\n  return (\r\n    <div className=\"comments--view\">\r\n      {comments.map((comment) => {\r\n        return (\r\n          <div key={comment.comment_uid}>\r\n            <section>\r\n              <img src={comment.poster_profile_image} alt=\"profile-image\" />\r\n              <p>{comment.poster_username}</p>\r\n              <p>{comment.comment}</p>\r\n            </section>\r\n\r\n            <section>\r\n              <p>{comment.posted_date}</p>\r\n              <p>{comment.comment_likes_count || 0} likes</p>\r\n            </section>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentsView;\r\n",{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":21,"column":6,"nodeType":"235","endLine":21,"endColumn":8,"suggestions":"236"},{"ruleId":"233","severity":1,"message":"237","line":58,"column":6,"nodeType":"235","endLine":58,"endColumn":34,"suggestions":"238"},{"ruleId":"239","severity":1,"message":"240","line":9,"column":10,"nodeType":"241","messageId":"242","endLine":9,"endColumn":21},{"ruleId":"239","severity":1,"message":"243","line":9,"column":23,"nodeType":"241","messageId":"242","endLine":9,"endColumn":37},{"ruleId":"239","severity":1,"message":"244","line":1,"column":17,"nodeType":"241","messageId":"242","endLine":1,"endColumn":25},{"ruleId":"239","severity":1,"message":"244","line":1,"column":26,"nodeType":"241","messageId":"242","endLine":1,"endColumn":34},{"ruleId":"229","replacedBy":"245"},{"ruleId":"231","replacedBy":"246"},{"ruleId":"233","severity":1,"message":"247","line":89,"column":6,"nodeType":"235","endLine":89,"endColumn":39,"suggestions":"248"},{"ruleId":"249","severity":1,"message":"250","line":191,"column":5,"nodeType":"251","messageId":"252","endLine":191,"endColumn":12},{"ruleId":"233","severity":1,"message":"253","line":96,"column":6,"nodeType":"235","endLine":96,"endColumn":31,"suggestions":"254"},{"ruleId":"255","severity":1,"message":"256","line":148,"column":15,"nodeType":"257","endLine":151,"endColumn":17},{"ruleId":"233","severity":1,"message":"258","line":13,"column":6,"nodeType":"235","endLine":13,"endColumn":8,"suggestions":"259"},{"ruleId":"260","severity":1,"message":"261","line":53,"column":9,"nodeType":"257","endLine":53,"endColumn":78},{"ruleId":"260","severity":1,"message":"261","line":95,"column":9,"nodeType":"257","endLine":95,"endColumn":78},{"ruleId":"262","severity":1,"message":"263","line":10,"column":15,"nodeType":"257","endLine":10,"endColumn":77},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'LOGIN_WITH_UID' and 'token'. Either include them or remove the dependency array. If 'LOGIN_WITH_UID' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["266"],"React Hook useEffect has missing dependencies: 'GET_FEED', 'GET_RECOMMENDED_USERS', and 'feed.length'. Either include them or remove the dependency array. If 'GET_FEED' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["267"],"no-unused-vars","'searchQuery' is assigned a value but never used.","Identifier","unusedVar","'setSearchQuery' is assigned a value but never used.","'useState' is defined but never used.",["264"],["265"],"React Hook useEffect has missing dependencies: 'GET_PROFILE_DATA' and 'profileData.length'. Either include them or remove the dependency array. If 'GET_PROFILE_DATA' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["268"],"no-dupe-keys","Duplicate key 'loading'.","ObjectExpression","unexpected","React Hook useEffect has missing dependencies: 'LOAD_POST', 'currentPost.length', and 'getComments'. Either include them or remove the dependency array. If 'LOAD_POST' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["269"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'explorePosts.length' and 'loadExplorePosts'. Either include them or remove the dependency array. If 'loadExplorePosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["270"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},"Update the dependencies array to be: [LOGIN_WITH_UID, token]",{"range":"281","text":"282"},"Update the dependencies array to be: [GET_FEED, GET_RECOMMENDED_USERS, currentUserUid, feed.length, feedLoaded]",{"range":"283","text":"284"},"Update the dependencies array to be: [profileUsername, currentUserUid, profileData.length, GET_PROFILE_DATA]",{"range":"285","text":"286"},"Update the dependencies array to be: [LOAD_POST, currentPost.length, currentUserUid, getComments, post_id]",{"range":"287","text":"288"},"Update the dependencies array to be: [explorePosts.length, loadExplorePosts]",{"range":"289","text":"290"},[779,781],"[LOGIN_WITH_UID, token]",[1739,1767],"[GET_FEED, GET_RECOMMENDED_USERS, currentUserUid, feed.length, feedLoaded]",[2740,2773],"[profileUsername, currentUserUid, profileData.length, GET_PROFILE_DATA]",[2646,2671],"[LOAD_POST, currentPost.length, currentUserUid, getComments, post_id]",[463,465],"[explorePosts.length, loadExplorePosts]"]