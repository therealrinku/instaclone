[{"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\index.js":"1","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\store.js":"2","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\rootReducer.js":"3","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\feed\\feedReducer.js":"4","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\feed\\feedActionTypes.js":"5","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\App.js":"6","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Homepage.js":"7","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Feed.js":"8","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\feed\\feedActions.js":"9","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Post.js":"10","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\server_url.js":"11","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\Icons\\CustomIcons.js":"12","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\user\\userReducer.js":"13","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\user\\userActionTypes.js":"14","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Navbar.js":"15","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Backdrop.js":"16","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\utilities\\overflowToggler.js":"17","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\PostOptModal.js":"18","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\PostButton.js":"19","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\AddPostModal.js":"20","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\feedServices.js":"21","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\firebase\\storage.js":"22","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\firebase\\config.js":"23","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\MobileNavbar.js":"24","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Profilepage.js":"25","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\ProfileSummary.js":"26","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\profile\\profileReducer.js":"27","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\profile\\profileActionTypes.js":"28","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\profile\\ProfileActions.js":"29","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\profileServices.js":"30","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\ProfileOptModal.js":"31","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\UnfollowPrompt.js":"32","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\ProfileButtonLine.js":"33","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\PostsGrid.js":"34","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\UserListModal.js":"35","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Loader.js":"36","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\PostView.js":"37","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\posts\\postsReducer.js":"38","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\posts\\postsActionsTypes.js":"39","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\posts\\postsActions.js":"40","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\ExplorePage.js":"41","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\SearchView.js":"42","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\userServices.js":"43","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Loginpage.js":"44","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Signuppage.js":"45","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Landingpage.js":"46"},{"size":358,"mtime":1609429642135,"results":"47","hashOfConfig":"48"},{"size":420,"mtime":1609430309686,"results":"49","hashOfConfig":"48"},{"size":415,"mtime":1610112658415,"results":"50","hashOfConfig":"48"},{"size":3311,"mtime":1610019231652,"results":"51","hashOfConfig":"48"},{"size":427,"mtime":1609498068430,"results":"52","hashOfConfig":"48"},{"size":1219,"mtime":1610460683044,"results":"53","hashOfConfig":"48"},{"size":2825,"mtime":1610188776667,"results":"54","hashOfConfig":"48"},{"size":944,"mtime":1610020185697,"results":"55","hashOfConfig":"48"},{"size":3843,"mtime":1610024042242,"results":"56","hashOfConfig":"48"},{"size":5228,"mtime":1610192216120,"results":"57","hashOfConfig":"48"},{"size":70,"mtime":1609424856684,"results":"58","hashOfConfig":"48"},{"size":9885,"mtime":1610369679816,"results":"59","hashOfConfig":"48"},{"size":1194,"mtime":1610450378089,"results":"60","hashOfConfig":"48"},{"size":228,"mtime":1609423683008,"results":"61","hashOfConfig":"48"},{"size":1921,"mtime":1610370071268,"results":"62","hashOfConfig":"48"},{"size":393,"mtime":1610178845181,"results":"63","hashOfConfig":"48"},{"size":231,"mtime":1609483675715,"results":"64","hashOfConfig":"48"},{"size":1538,"mtime":1610192241753,"results":"65","hashOfConfig":"48"},{"size":698,"mtime":1609934196613,"results":"66","hashOfConfig":"48"},{"size":894,"mtime":1609512677118,"results":"67","hashOfConfig":"48"},{"size":3587,"mtime":1610282576270,"results":"68","hashOfConfig":"48"},{"size":197,"mtime":1609513014714,"results":"69","hashOfConfig":"48"},{"size":348,"mtime":1610018164630,"results":"70","hashOfConfig":"48"},{"size":1030,"mtime":1609562270103,"results":"71","hashOfConfig":"48"},{"size":6827,"mtime":1610291391294,"results":"72","hashOfConfig":"48"},{"size":4233,"mtime":1609982625085,"results":"73","hashOfConfig":"48"},{"size":2896,"mtime":1609983291167,"results":"74","hashOfConfig":"48"},{"size":450,"mtime":1609982931973,"results":"75","hashOfConfig":"48"},{"size":2914,"mtime":1610024740403,"results":"76","hashOfConfig":"48"},{"size":2330,"mtime":1609982838559,"results":"77","hashOfConfig":"48"},{"size":859,"mtime":1609849400590,"results":"78","hashOfConfig":"48"},{"size":555,"mtime":1609945241507,"results":"79","hashOfConfig":"48"},{"size":918,"mtime":1609933954538,"results":"80","hashOfConfig":"48"},{"size":655,"mtime":1610183250850,"results":"81","hashOfConfig":"48"},{"size":1068,"mtime":1609979156766,"results":"82","hashOfConfig":"48"},{"size":96,"mtime":1610291340236,"results":"83","hashOfConfig":"48"},{"size":8146,"mtime":1610291228188,"results":"84","hashOfConfig":"48"},{"size":3508,"mtime":1610287393607,"results":"85","hashOfConfig":"48"},{"size":504,"mtime":1610286399084,"results":"86","hashOfConfig":"48"},{"size":4092,"mtime":1610287206598,"results":"87","hashOfConfig":"48"},{"size":1091,"mtime":1610289539487,"results":"88","hashOfConfig":"48"},{"size":1466,"mtime":1610360621307,"results":"89","hashOfConfig":"48"},{"size":963,"mtime":1610463136817,"results":"90","hashOfConfig":"48"},{"size":1342,"mtime":1610462469334,"results":"91","hashOfConfig":"48"},{"size":1521,"mtime":1610463631094,"results":"92","hashOfConfig":"48"},{"size":160,"mtime":1610460695754,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"6xydaq",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"96"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"96"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\index.js",[],["194","195"],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\store.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\rootReducer.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\feed\\feedReducer.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\feed\\feedActionTypes.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\App.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Homepage.js",["196"],"import Feed from \"../components/Feed\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport * as feedActions from \"../redux/feed/feedActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport PostButton from \"../components/PostButton\";\r\nimport overflowToggler from \"../utilities/overflowToggler\";\r\nimport AddPostModal from \"../components/AddPostModal\";\r\nimport Backdrop from \"../components/Backdrop\";\r\nimport MobileNavbar from \"../components/MobileNavbar\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst Homepage = ({\r\n  currentUsername,\r\n  currentUserProfileImage,\r\n  currentUserUid,\r\n  feed,\r\n  GET_FEED,\r\n  UPLOAD_POST,\r\n  loading,\r\n}) => {\r\n  const [selectedImage, setSelectedImage] = useState(\"\");\r\n  const [showAddPostModal, setShowAddPostModal] = useState(false);\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  const uploadPost = () => {\r\n    if (selectedImage) {\r\n      toggleAddPostModal();\r\n      UPLOAD_POST({\r\n        owner_uid: currentUserUid,\r\n        status: status,\r\n        currentUsername: currentUsername,\r\n        image: selectedImage,\r\n        posted_date: new Date(),\r\n        currentUserProfileImage: currentUserProfileImage,\r\n      });\r\n    }\r\n  };\r\n\r\n  const toggleAddPostModal = () => {\r\n    setShowAddPostModal((prev) => !prev);\r\n    overflowToggler();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (feed.length <= 0) {\r\n      GET_FEED(currentUserUid);\r\n    }\r\n  }, [currentUserUid]);\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      {loading ? <Loader /> : null}\r\n      {showAddPostModal ? (\r\n        <Fragment>\r\n          <Backdrop show={showAddPostModal} toggle={toggleAddPostModal} />\r\n          <AddPostModal\r\n            uploadPost={uploadPost}\r\n            toggle={toggleAddPostModal}\r\n            selectedImage={selectedImage}\r\n            currentUserProfileImage={currentUserProfileImage}\r\n            status={status}\r\n            setStatus={setStatus}\r\n          />\r\n        </Fragment>\r\n      ) : null}\r\n      <PostButton\r\n        setSelectedImage={setSelectedImage}\r\n        toggleAddPostModal={toggleAddPostModal}\r\n      />\r\n      <Navbar />\r\n      <Feed feed={feed} />\r\n      <MobileNavbar />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.feed.loading_feed,\r\n    feed: state.feed.posts,\r\n    currentUsername: state.user.currentUserData.username,\r\n    currentUserUid: state.user.currentUserData.uid,\r\n    currentUserProfileImage: state.user.currentUserData.profile_image_url,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    UPLOAD_POST: (post_data) => dispatch(feedActions.UPLOAD_POST(post_data)),\r\n    GET_FEED: (user_uid) => dispatch(feedActions.GET_FEED(user_uid)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage);\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Feed.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\feed\\feedActions.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Post.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\server_url.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\Icons\\CustomIcons.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\user\\userReducer.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\user\\userActionTypes.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Navbar.js",["197","198"],"import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Icons from \"../Icons/CustomIcons\";\r\nimport SearchView from \"./SearchView\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Navbar = ({ currentUsername, currentUserProfileimage }) => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const history = useHistory();\r\n  const pathname = history.location.pathname;\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <ul>\r\n        <Link to=\"/\">Instaclone</Link>\r\n      </ul>\r\n\r\n      <ul>\r\n        <SearchView />\r\n      </ul>\r\n\r\n      <ul className=\"right\">\r\n        <Link to=\"/\">\r\n          {pathname === \"/\" ? <Icons.HomeActiveIcon /> : <Icons.HomeIcon />}\r\n        </Link>\r\n\r\n        <Link to=\"/chat\">\r\n          <Icons.ChatIcon />\r\n        </Link>\r\n\r\n        <Link to=\"/explore\">\r\n          {pathname === \"/explore\" ? (\r\n            <Icons.ExploreActiveIcon />\r\n          ) : (\r\n            <Icons.ExploreIcon />\r\n          )}\r\n        </Link>\r\n\r\n        <Link to=\"/activity\">\r\n          <Icons.ActivityIcon />\r\n        </Link>\r\n\r\n        <Link to={`/${currentUsername}`}>\r\n          <img\r\n            style={\r\n              pathname === `/${currentUsername}`\r\n                ? {\r\n                    border: \"solid 1px black\",\r\n                    padding: \"2px\",\r\n                    width: \"20px\",\r\n                    height: \"20px\",\r\n                  }\r\n                : null\r\n            }\r\n            src={currentUserProfileimage || \"https://bit.ly/3pc96tw\"}\r\n            alt=\"profile_image\"\r\n          />\r\n        </Link>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUsername: state.user.currentUserData.username,\r\n    currentUserProfileimage: state.user.currentUserData.profile_image_url,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Backdrop.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\utilities\\overflowToggler.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\PostOptModal.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\PostButton.js",["199"],"import React, { useState } from \"react\";\r\nimport { IoAdd } from \"react-icons/all\";\r\n\r\nconst NewPostBtn = ({ setSelectedImage, toggleAddPostModal }) => {\r\n  const updateFile = (e) => {\r\n    if (e.target.files[0]) {\r\n      toggleAddPostModal();\r\n      setSelectedImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"post--button\">\r\n      <button>\r\n        <form>\r\n          <input\r\n            type=\"file\"\r\n            id=\"file_input\"\r\n            onChange={updateFile}\r\n            name=\"post\"\r\n          />\r\n          <label htmlFor=\"file_input\">\r\n            <IoAdd />\r\n          </label>\r\n        </form>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPostBtn;\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\AddPostModal.js",["200"],"import React, { useMemo, useState } from \"react\";\r\n\r\nconst AddPostModal = ({\r\n  uploadPost,\r\n  toggle,\r\n  selectedImage,\r\n  currentUserProfileImage,\r\n  status,\r\n  setStatus,\r\n}) => {\r\n  const selectedImageFile = useMemo(() => {\r\n    return selectedImage ? URL.createObjectURL(selectedImage) : null;\r\n  }, [selectedImage]);\r\n\r\n  return (\r\n    <div className=\"add--post-modal\">\r\n      <div>\r\n        <img src={currentUserProfileImage} alt=\"my_profile_image\" />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your status here\"\r\n          value={status}\r\n          onChange={(e) => setStatus(e.target.value)}\r\n        />\r\n        <img src={selectedImageFile} alt=\"post_img\" />\r\n      </div>\r\n\r\n      <div>\r\n        <button onClick={uploadPost}>Post</button>\r\n        <button onClick={toggle}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPostModal;\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\feedServices.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\firebase\\storage.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\firebase\\config.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\MobileNavbar.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Profilepage.js",["201","202"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport ProfileSummary from \"../components/ProfileSummary\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport MobileNavbar from \"../components/MobileNavbar\";\r\nimport * as profileActions from \"../redux/profile/ProfileActions\";\r\nimport { connect } from \"react-redux\";\r\nimport overflowToggler from \"../utilities/overflowToggler\";\r\nimport ProfileOptModal from \"../components/ProfileOptModal\";\r\nimport Backdrop from \"../components/Backdrop\";\r\nimport UnfollowPrompt from \"../components/UnfollowPrompt\";\r\nimport ProfileButtonLine from \"../components/ProfileButtonLine\";\r\nimport PostsGrid from \"../components/PostsGrid\";\r\nimport UserListModal from \"../components/UserListModal\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst Profilepage = ({\r\n  history,\r\n  currentUserUid,\r\n  profiles,\r\n  GET_PROFILE_DATA,\r\n  currentUsername,\r\n  FOLLOW,\r\n  UNFOLLOW,\r\n  FETCH_FOLLOWERS,\r\n  FETCH_FOLLOWINGS,\r\n  loading,\r\n  loading_followers_or_following,\r\n}) => {\r\n  const profileUsername = history.location.pathname.slice(1);\r\n  const profileData = profiles.filter(\r\n    (profile) => profile?.username === profileUsername\r\n  );\r\n\r\n  //modal handlers\r\n  const [showProfileOptionsModal, setShowProfileOptionsModal] = useState(false);\r\n  const [showUnfollowPrompt, setShowUnfollowPrompt] = useState(false);\r\n  const [showFollowers, setShowFollowers] = useState(false);\r\n  const [showFollowings, setShowFollowings] = useState(false);\r\n\r\n  //\r\n  const [showSavedPosts, setShowSavedPosts] = useState(false);\r\n\r\n  //followers and following list\r\n  const followersList = profiles.filter(\r\n    (profile) => profile.username === profileUsername\r\n  )[0]?.followers;\r\n  const followingList = profiles.filter(\r\n    (profile) => profile.username === profileUsername\r\n  )[0]?.followings;\r\n\r\n  const LOAD_FOLLOWERS = () => {\r\n    if (!followersList) {\r\n      FETCH_FOLLOWERS(profileUsername);\r\n    }\r\n    toggleModal(setShowFollowers);\r\n  };\r\n\r\n  const LOAD_FOLLOWINGS = () => {\r\n    if (!followingList) {\r\n      FETCH_FOLLOWINGS(profileUsername);\r\n    }\r\n    toggleModal(setShowFollowings);\r\n  };\r\n\r\n  const toggleModal = (setModal) => {\r\n    setModal((prev) => !prev);\r\n    overflowToggler();\r\n  };\r\n\r\n  useEffect(() => {\r\n    //set document title\r\n    document.title = `${profileUsername}-Instaclone`;\r\n    if (profileData.length <= 0) {\r\n      GET_PROFILE_DATA(profileUsername, currentUserUid);\r\n    }\r\n\r\n    return () => {\r\n      document.title = \"Instaclone\";\r\n    };\r\n  }, [profileUsername]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"profile--page\">\r\n          <ProfileSummary\r\n            profileData={profileData[0] || []}\r\n            toggleProfileOptions={() => toggleModal(setShowProfileOptionsModal)}\r\n            toggleUnfollowPrompt={() => toggleModal(setShowUnfollowPrompt)}\r\n            isMyProfile={currentUsername === profileUsername}\r\n            FOLLOW={() => FOLLOW(profileData[0]?.uid, currentUserUid)}\r\n            LOAD_FOLLOWERS={LOAD_FOLLOWERS}\r\n            LOAD_FOLLOWINGS={LOAD_FOLLOWINGS}\r\n          />\r\n          <ProfileButtonLine\r\n            showSavedPosts={showSavedPosts}\r\n            isMyProfile={currentUsername === profileUsername}\r\n            viewSavedPosts={() => setShowSavedPosts(true)}\r\n            hideSavedPosts={() => setShowSavedPosts(false)}\r\n            no_posts={profileData[0]?.posts.length <= 0}\r\n          />\r\n          <PostsGrid\r\n            userPosts={\r\n              showSavedPosts\r\n                ? profileData[0]?.savedPosts\r\n                : profileData[0]?.posts || []\r\n            }\r\n          />\r\n          <MobileNavbar />\r\n          {showProfileOptionsModal ? (\r\n            <Fragment>\r\n              <ProfileOptModal\r\n                toggle={() => toggleModal(setShowProfileOptionsModal)}\r\n                isMyProfile={currentUsername === profileUsername}\r\n              />\r\n              <Backdrop\r\n                show={showProfileOptionsModal}\r\n                toggle={() => toggleModal(setShowProfileOptionsModal)}\r\n              />\r\n            </Fragment>\r\n          ) : null}\r\n\r\n          {showUnfollowPrompt ? (\r\n            <Fragment>\r\n              <Backdrop\r\n                show={showUnfollowPrompt}\r\n                toggle={() => toggleModal(setShowUnfollowPrompt)}\r\n              />\r\n              <UnfollowPrompt\r\n                profileUsername={profileUsername}\r\n                profileImage={profileData[0]?.profile_image_url}\r\n                toggle={() => toggleModal(setShowUnfollowPrompt)}\r\n                UNFOLLOW={() => UNFOLLOW(profileData[0].uid, currentUserUid)}\r\n              />\r\n            </Fragment>\r\n          ) : null}\r\n\r\n          {showFollowers || showFollowings ? (\r\n            <Fragment>\r\n              <Backdrop\r\n                toggle={() =>\r\n                  showFollowers\r\n                    ? toggleModal(setShowFollowers)\r\n                    : toggleModal(setShowFollowings)\r\n                }\r\n                show={showFollowers || showFollowings}\r\n              />\r\n              <UserListModal\r\n                title={showFollowers ? \"Followers\" : \"Following\"}\r\n                loading={loading_followers_or_following}\r\n                users={(showFollowers ? followersList : followingList) || []}\r\n                toggle={() =>\r\n                  showFollowers\r\n                    ? toggleModal(setShowFollowers)\r\n                    : toggleModal(setShowFollowings)\r\n                }\r\n              />\r\n            </Fragment>\r\n          ) : null}\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.profile.loading,\r\n    currentUsername: state.user.currentUserData.username,\r\n    currentUserUid: state.user.currentUserData.uid,\r\n    profiles: state.profile.profiles,\r\n    loading: state.profile.loading,\r\n    loading_followers_or_following:\r\n      state.profile.loading_followers_or_following,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    FETCH_FOLLOWERS: (username) =>\r\n      dispatch(profileActions.FETCH_FOLLOWERS(username)),\r\n    FETCH_FOLLOWINGS: (username) =>\r\n      dispatch(profileActions.FETCH_FOLLOWINGS(username)),\r\n    UNFOLLOW: (unfollowing_user_uid, unfollower_user_uid) =>\r\n      dispatch(\r\n        profileActions.UNFOLLOW(unfollowing_user_uid, unfollower_user_uid)\r\n      ),\r\n    FOLLOW: (following_user_uid, follower_user_uid) =>\r\n      dispatch(profileActions.FOLLOW(following_user_uid, follower_user_uid)),\r\n    GET_PROFILE_DATA: (profile_username, current_user_uid) =>\r\n      dispatch(\r\n        profileActions.GET_PROFILE_DATA(profile_username, current_user_uid)\r\n      ),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profilepage);\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\ProfileSummary.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\profile\\profileReducer.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\profile\\profileActionTypes.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\profile\\ProfileActions.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\profileServices.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\ProfileOptModal.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\UnfollowPrompt.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\ProfileButtonLine.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\PostsGrid.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\UserListModal.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Loader.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\PostView.js",["203","204","205"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { BiDotsHorizontal } from \"react-icons/bi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Icons from \"../Icons/CustomIcons\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport MobileNavbar from \"../components/MobileNavbar\";\r\nimport * as PostsActions from \"../redux/posts/postsActions\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport overflowToggler from \"../utilities/overflowToggler\";\r\nimport Backdrop from \"../components/Backdrop\";\r\nimport PostOptModal from \"../components/PostOptModal\";\r\nimport UsersListModal from \"../components/UserListModal\";\r\nimport Post from \"../components/Post\";\r\n\r\nconst PostView = ({\r\n  feedPosts,\r\n  currentUsername,\r\n  currentUserUid,\r\n  posts,\r\n  match,\r\n  history,\r\n  LOAD_POST,\r\n  loading,\r\n  LIKE_POST,\r\n  UNLIKE_POST,\r\n  SAVE_POST,\r\n  UNSAVE_POST,\r\n  GET_LIKERS,\r\n  loadingLikers,\r\n  DELETE_POST,\r\n}) => {\r\n  //modal\r\n  const [showPostOptionsModal, setShowPostOptionsModal] = useState(false);\r\n  const [showLikersModal, setShowLikersModal] = useState(false);\r\n\r\n  //checking image is loaded\r\n  const [imageIsLoaded, setImageIsLoaded] = useState(false);\r\n\r\n  const toggleModal = (setModal) => {\r\n    setModal((prev) => !prev);\r\n    overflowToggler();\r\n  };\r\n\r\n  const post_id = match.params.post_id;\r\n  const currentPost = posts.filter((post) => post.post_id === post_id);\r\n  const postExistsInFeed =\r\n    feedPosts.findIndex((post) => post.post_id === post_id) >= 0;\r\n  const thisPostInFeed = feedPosts.filter((post) => post.post_id === post_id);\r\n\r\n  const thisPostLikers = currentPost[0]?.post_likers;\r\n\r\n  const post_uid = currentPost[0]?.post_uid;\r\n  const haveILiked = postExistsInFeed\r\n    ? thisPostInFeed[0]?.liked_by_me\r\n    : currentPost[0]?.liked_by_me;\r\n  const haveISaved = postExistsInFeed\r\n    ? thisPostInFeed[0]?.i_have_saved\r\n    : currentPost[0]?.i_have_saved;\r\n  const postLikesCount = postExistsInFeed\r\n    ? thisPostInFeed[0]?.post_likes_count\r\n    : currentPost[0]?.post_likes_count;\r\n\r\n  const likeUnlikePost = () => {\r\n    if (haveILiked) {\r\n      UNLIKE_POST(post_uid, currentUserUid, postExistsInFeed);\r\n    } else {\r\n      LIKE_POST(post_uid, currentUserUid, postExistsInFeed);\r\n    }\r\n  };\r\n\r\n  const saveUnsavePost = () => {\r\n    if (haveISaved) {\r\n      UNSAVE_POST(post_uid, currentUsername, postExistsInFeed);\r\n    } else {\r\n      SAVE_POST(post_uid, currentUsername, postExistsInFeed);\r\n    }\r\n  };\r\n\r\n  const getLikers = () => {\r\n    toggleModal(setShowLikersModal);\r\n    if (!thisPostLikers) {\r\n      GET_LIKERS(post_uid);\r\n    }\r\n  };\r\n\r\n  const deletePost = () => {\r\n    toggleModal(setShowPostOptionsModal);\r\n    DELETE_POST(post_uid, postExistsInFeed);\r\n    history.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentPost.length < 1) {\r\n      LOAD_POST(post_id, currentUserUid);\r\n    }\r\n  }, [currentUserUid, post_id]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {showLikersModal ? (\r\n        <Fragment>\r\n          <UsersListModal\r\n            users={thisPostLikers || []}\r\n            title=\"Likers\"\r\n            toggle={() => toggleModal(setShowLikersModal)}\r\n            loading={loadingLikers}\r\n          />\r\n          <Backdrop\r\n            show={showLikersModal}\r\n            toggle={() => toggleModal(setShowLikersModal)}\r\n          />\r\n        </Fragment>\r\n      ) : null}\r\n\r\n      {showPostOptionsModal ? (\r\n        <Fragment>\r\n          <Backdrop\r\n            show={showPostOptionsModal}\r\n            toggle={() => toggleModal(setShowPostOptionsModal)}\r\n          />\r\n          <PostOptModal\r\n            isMyPost={currentPost[0].poster_username === currentUsername}\r\n            toggle={() => toggleModal(setShowPostOptionsModal)}\r\n            post_id={post_id}\r\n            deletePost={deletePost}\r\n          />\r\n        </Fragment>\r\n      ) : null}\r\n\r\n      <Navbar />\r\n      <MobileNavbar />\r\n      {loading ? (\r\n        <Loader />\r\n      ) : //checking if post exiists\r\n      !loading && !currentPost[0]?.post_image ? (\r\n        <p\r\n          style={{ marginTop: \"100px\", textAlign: \"center\", fontSize: \"15px\" }}\r\n        >\r\n          Post deleted or something went wrong!\r\n        </p>\r\n      ) : (\r\n        <Fragment>\r\n          <div\r\n            className=\"post--view--\"\r\n            style={!imageIsLoaded ? { display: \"none\" } : null}\r\n          >\r\n            <section>\r\n              <img\r\n                onLoad={() => setImageIsLoaded(true)}\r\n                src={currentPost[0]?.post_image}\r\n              />\r\n            </section>\r\n\r\n            <section>\r\n              <div className=\"top--section\">\r\n                <ul>\r\n                  <img\r\n                    src={currentPost[0]?.poster_profileimage}\r\n                    alt=\"post_user_image\"\r\n                  />\r\n                  <Link to={`/${currentPost[0]?.poster_username}`}>\r\n                    {currentPost[0]?.poster_username || \"rinku\"}\r\n                  </Link>\r\n                </ul>\r\n\r\n                <ul>\r\n                  <button onClick={() => toggleModal(setShowPostOptionsModal)}>\r\n                    <BiDotsHorizontal />\r\n                  </button>\r\n                </ul>\r\n              </div>\r\n\r\n              <div className=\"comment--view-section\"></div>\r\n\r\n              <div className=\"absolute--bottom\">\r\n                <div className=\"buttons\">\r\n                  <div className=\"buttons--section-one\">\r\n                    <button onClick={likeUnlikePost}>\r\n                      {haveILiked ? <Icons.LovedIcon /> : <Icons.LoveIcon />}\r\n                    </button>\r\n\r\n                    <button>\r\n                      <Icons.CommentIcon />\r\n                    </button>\r\n\r\n                    <button>\r\n                      <Icons.ShareIcon />\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <button onClick={saveUnsavePost}>\r\n                      {haveISaved ? <Icons.SavedIcon /> : <Icons.SaveIcon />}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <button onClick={getLikers}>\r\n                    {postLikesCount || \"No\"} likes\r\n                  </button>\r\n                  <button>\r\n                    {currentPost[0]?.post_comments_count || 0} comments\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"date\">\r\n                  <p>{currentPost[0]?.post_posted_date}</p>\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loadingLikers: state.posts.loading_likers,\r\n    feedPosts: state.feed.posts,\r\n    currentUsername: state.user.currentUserData.username,\r\n    currentUserUid: state.user.currentUserData.uid,\r\n    posts: state.posts.posts,\r\n    loading: state.posts.loading_post,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    DELETE_POST: (post_uid, post_exists_in_feed) =>\r\n      dispatch(PostsActions.DELETE_POST(post_uid, post_exists_in_feed)),\r\n    GET_LIKERS: (post_uid) => dispatch(PostsActions.GET_LIKERS(post_uid)),\r\n    SAVE_POST: (post_uid, saver_username, post_exists_in_feed) =>\r\n      dispatch(\r\n        PostsActions.SAVE_POST(post_uid, saver_username, post_exists_in_feed)\r\n      ),\r\n    UNSAVE_POST: (post_uid, unsaver_username, post_exists_in_feed) =>\r\n      dispatch(\r\n        PostsActions.UNSAVE_POST(\r\n          post_uid,\r\n          unsaver_username,\r\n          post_exists_in_feed\r\n        )\r\n      ),\r\n    LIKE_POST: (post_uid, liker_uid, post_exists_in_feed) =>\r\n      dispatch(\r\n        PostsActions.LIKE_POST(post_uid, liker_uid, post_exists_in_feed)\r\n      ),\r\n    UNLIKE_POST: (post_uid, unliker_uid, post_exists_in_feed) =>\r\n      dispatch(\r\n        PostsActions.UNLIKE_POST(post_uid, unliker_uid, post_exists_in_feed)\r\n      ),\r\n    LOAD_POST: (post_id, current_user_uid) =>\r\n      dispatch(PostsActions.LOAD_POST(post_id, current_user_uid)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostView);\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\posts\\postsReducer.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\posts\\postsActionsTypes.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\posts\\postsActions.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\ExplorePage.js",["206"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport PostsGrid from \"../components/PostsGrid\";\r\nimport * as PostsActions from \"../redux/posts/postsActions\";\r\n\r\nconst ExplorePage = ({ loading, explorePosts, loadExplorePosts }) => {\r\n  useEffect(() => {\r\n    if (explorePosts.length <= 0) {\r\n      loadExplorePosts();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"explore--page\">\r\n          <PostsGrid userPosts={explorePosts} />\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.posts.loading_explore_posts,\r\n    explorePosts: state.posts.explore_posts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loadExplorePosts: () => dispatch(PostsActions.LOAD_EXPLORE_POSTS()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExplorePage);\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\SearchView.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\userServices.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Loginpage.js",["207"],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Signuppage.js",["208"],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Landingpage.js",[],{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":49,"column":6,"nodeType":"215","endLine":49,"endColumn":22,"suggestions":"216"},{"ruleId":"217","severity":1,"message":"218","line":9,"column":10,"nodeType":"219","messageId":"220","endLine":9,"endColumn":21},{"ruleId":"217","severity":1,"message":"221","line":9,"column":23,"nodeType":"219","messageId":"220","endLine":9,"endColumn":37},{"ruleId":"217","severity":1,"message":"222","line":1,"column":17,"nodeType":"219","messageId":"220","endLine":1,"endColumn":25},{"ruleId":"217","severity":1,"message":"222","line":1,"column":26,"nodeType":"219","messageId":"220","endLine":1,"endColumn":34},{"ruleId":"213","severity":1,"message":"223","line":80,"column":6,"nodeType":"215","endLine":80,"endColumn":23,"suggestions":"224"},{"ruleId":"225","severity":1,"message":"226","line":175,"column":5,"nodeType":"227","messageId":"228","endLine":175,"endColumn":12},{"ruleId":"217","severity":1,"message":"229","line":14,"column":8,"nodeType":"219","messageId":"220","endLine":14,"endColumn":12},{"ruleId":"213","severity":1,"message":"230","line":97,"column":6,"nodeType":"215","endLine":97,"endColumn":31,"suggestions":"231"},{"ruleId":"232","severity":1,"message":"233","line":149,"column":15,"nodeType":"234","endLine":152,"endColumn":17},{"ruleId":"213","severity":1,"message":"235","line":13,"column":6,"nodeType":"215","endLine":13,"endColumn":8,"suggestions":"236"},{"ruleId":"237","severity":1,"message":"238","line":44,"column":9,"nodeType":"234","endLine":44,"endColumn":78},{"ruleId":"237","severity":1,"message":"238","line":50,"column":9,"nodeType":"234","endLine":50,"endColumn":78},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'GET_FEED' and 'feed.length'. Either include them or remove the dependency array. If 'GET_FEED' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["241"],"no-unused-vars","'searchQuery' is assigned a value but never used.","Identifier","unusedVar","'setSearchQuery' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'GET_PROFILE_DATA', 'currentUserUid', and 'profileData.length'. Either include them or remove the dependency array. If 'GET_PROFILE_DATA' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["242"],"no-dupe-keys","Duplicate key 'loading'.","ObjectExpression","unexpected","'Post' is defined but never used.","React Hook useEffect has missing dependencies: 'LOAD_POST' and 'currentPost.length'. Either include them or remove the dependency array. If 'LOAD_POST' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["243"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'explorePosts.length' and 'loadExplorePosts'. Either include them or remove the dependency array. If 'loadExplorePosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["244"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},"Update the dependencies array to be: [GET_FEED, currentUserUid, feed.length]",{"range":"253","text":"254"},"Update the dependencies array to be: [GET_PROFILE_DATA, currentUserUid, profileData.length, profileUsername]",{"range":"255","text":"256"},"Update the dependencies array to be: [LOAD_POST, currentPost.length, currentUserUid, post_id]",{"range":"257","text":"258"},"Update the dependencies array to be: [explorePosts.length, loadExplorePosts]",{"range":"259","text":"260"},[1447,1463],"[GET_FEED, currentUserUid, feed.length]",[2512,2529],"[GET_PROFILE_DATA, currentUserUid, profileData.length, profileUsername]",[2896,2921],"[LOAD_POST, currentPost.length, currentUserUid, post_id]",[464,466],"[explorePosts.length, loadExplorePosts]"]